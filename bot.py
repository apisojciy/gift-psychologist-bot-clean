from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ApplicationBuilder, CallbackContext, CommandHandler, CallbackQueryHandler, MessageHandler, filters

YOUR_USERNAME = "andriy_pisotskiy" # –í–ø–µ–≤–Ω–∏—Å—å, —â–æ —Ü–µ —Å–∞–º–µ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –∞ –Ω–µ ID. –î–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑–∞ ID –∫—Ä–∞—â–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ chat_id.

PSYCHOLOGISTS = [
    ("–¢–∫–∞—á–µ–Ω–∫–æ –Æ–ª—ñ—è –õ–µ–æ–Ω—ñ–¥—ñ–≤–Ω–∞", "https://doc.ua/ua/doctor/kiev/22001-yuliya-tkachenko/about"),
    ("–û–ª—å–≥–∞ –°–µ—Ä–≥—ñ—î–Ω–∫–æ", "https://k-s.org.ua/branches/team/olga-sergiyenko/"),
    ("–®–∫–≤–∞—Ä–æ–∫ –ù–∞—Ç–∞–ª—ñ—è –ë–æ—Ä–∏—Å—ñ–≤–Ω–∞", "https://uccbt.com.ua/specialists/shkvarok-nataliya-borysivna/")
]

user_choices = {} # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏–º–µ—Ç—å—Å—è –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞

async def start(update: Update, context: CallbackContext):
    keyboard = [[InlineKeyboardButton("–ì–æ—Ç–æ–≤–∞ —Ä–æ–∑–ø–æ—á–∞—Ç–∏", callback_data='start_course')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    if update.message: # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —î –æ–±'—î–∫—Ç message
        await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! üéÅ –¶–µ –ø–æ–¥–∞—Ä—É–Ω–æ–∫ ‚Äì 5 —Å–µ–∞–Ω—Å—ñ–≤ —É –ø—Å–∏—Ö–æ–ª–æ–≥–∞.", reply_markup=reply_markup)
    else: # –¶–µ –º–æ–∂–µ —Å—Ç–∞—Ç–∏—Å—è, —è–∫—â–æ –∫–æ–º–∞–Ω–¥–∞ /start –≤–∏–∫–ª–∏–∫–∞–Ω–∞ –Ω–µ —á–µ—Ä–µ–∑ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –ø—ñ—Å–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞)
        await context.bot.send_message(chat_id=update.effective_chat.id, text="–ü—Ä–∏–≤—ñ—Ç! üéÅ –¶–µ –ø–æ–¥–∞—Ä—É–Ω–æ–∫ ‚Äì 5 —Å–µ–∞–Ω—Å—ñ–≤ —É –ø—Å–∏—Ö–æ–ª–æ–≥–∞.", reply_markup=reply_markup)


async def handle_choice(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer() # –û–±–æ–≤'—è–∑–∫–æ–≤–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –Ω–∞ callback_query, —â–æ–± –ø—Ä–∏–±—Ä–∞—Ç–∏ "–≥–æ–¥–∏–Ω–Ω–∏–∫" –∑ –∫–Ω–æ–ø–∫–∏

    if query.data == "start_course":
        keyboard_buttons = []
        for i, (name, url) in enumerate(PSYCHOLOGISTS):
            # –í–∞–∂–ª–∏–≤–æ: callback_data –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∑ URL –Ω–µ –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è. URL –≤—ñ–¥–∫—Ä–∏–≤–∞—î—Ç—å—Å—è –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ.
            # –Ø–∫—â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ, —â–æ–± –∫–Ω–æ–ø–∫–∞ –±—É–ª–∞ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—é (—ñ –≤–∏–∫–æ–Ω—É–≤–∞–ª–∞ callback_data),
            # –∞–ª–µ –ø—Ä–∏ —Ü—å–æ–º—É –º–∞–ª–∞ URL, —Ü–µ —Å–∫–ª–∞–¥–Ω—ñ—à–µ. –ó–∞–∑–≤–∏—á–∞–π, –∞–±–æ URL, –∞–±–æ callback_data.
            # –¢—É—Ç —è –ø—Ä–∏–ø—É—Å–∫–∞—é, —â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ, —â–æ–± –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ —ñ–º'—è –ø—Å–∏—Ö–æ–ª–æ–≥–∞ –≤—ñ–¥–∫—Ä–∏–≤–∞–≤—Å—è URL.
            # –¢–æ–º—É callback_data —Ç—É—Ç –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∑ URL.
            # –Ø–∫—â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –≤—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ –≤–∏–±—ñ—Ä –ø—Å–∏—Ö–æ–ª–æ–≥–∞, —Ç–æ URL –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–≤–æ–¥–∏—Ç–∏ –æ–∫—Ä–µ–º–æ.
            keyboard_buttons.append([InlineKeyboardButton(name, url=url)]) # –ö–Ω–æ–ø–∫–∞ –∑ URL

        # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –≤–∏–±–æ—Ä—É –ø—Å–∏—Ö–æ–ª–æ–≥–∞, —è–∫—â–æ —Ü–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–∫—Ä–µ–º–æ
        # –Ø–∫—â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ, —â–æ–± –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ —ñ–º'—è –ø—Å–∏—Ö–æ–ª–æ–≥–∞ *—Ç–∞–∫–æ–∂* –≤—ñ–¥—Å—Ç–µ–∂—É–≤–∞–≤—Å—è –≤–∏–±—ñ—Ä,
        # –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑—Ä–æ–±–∏—Ç–∏ –¥–≤—ñ –∫–Ω–æ–ø–∫–∏ –∞–±–æ –∑–º—ñ–Ω–∏—Ç–∏ –ª–æ–≥—ñ–∫—É.
        # –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –æ—Å—å —Ç–∞–∫ (—è–∫—â–æ URL –Ω–µ —î –æ—Å–Ω–æ–≤–Ω–æ—é –¥—ñ—î—é, –∞ —î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é):
        keyboard_choice_tracking = [
            [InlineKeyboardButton(name, callback_data=f"choose_psychologist_{i}")] for i, (name, url) in enumerate(PSYCHOLOGISTS)
        ]
        # –Ü –ø–æ—Ç—ñ–º –≤–∏–≤–æ–¥–∏—Ç–∏ URL —è–∫ —á–∞—Å—Ç–∏–Ω—É —Ç–µ–∫—Å—Ç—É
        # await query.edit_message_text(f"–û–±–µ—Ä—ñ—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥–∞: \n{PSYCHOLOGISTS[0][0]} - {PSYCHOLOGISTS[0][1]}", reply_markup=InlineKeyboardMarkup(keyboard_choice_tracking))

        # –û—Å–∫—ñ–ª—å–∫–∏ —É –≤–∞—Å –≤ original code –±—É–ª–∞ callback_data —É –∫–Ω–æ–ø–∫–∞—Ö –∑ URL, —è —ó—ó –≤—ñ–¥–Ω–æ–≤–ª—é—é, –∞–ª–µ –ø–∞–º'—è—Ç–∞–π—Ç–µ
        # —â–æ callback_data –Ω–µ "–ø—Ä–∞—Ü—é—î" –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –∑ URL - URL –≤—ñ–¥–∫—Ä–∏–≤–∞—î—Ç—å—Å—è.
        # –ú–æ–∂–ª–∏–≤–æ, –≤–∏ —Ö–æ—Ç—ñ–ª–∏ —â–æ–± URL –±—É–≤ —É —Ç–µ–∫—Å—Ç—ñ, –∞ callback_data –±—É–ª–∞ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤–∏–±–æ—Ä—É.
        keyboard = [[InlineKeyboardButton(name, url=url, callback_data=f"choose_{i}")] for i, (name, url) in enumerate(PSYCHOLOGISTS)]
        keyboard.append([InlineKeyboardButton("–Ü–Ω—à–∏–π –ø—Å–∏—Ö–æ–ª–æ–≥", callback_data="choose_other")])

        await query.edit_message_text("–û–±–µ—Ä—ñ—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥–∞:", reply_markup=InlineKeyboardMarkup(keyboard))

    elif query.data.startswith("choose_"):
        user_id = query.from_user.id
        if query.data == "choose_other":
            await query.message.reply_text("–í–≤–µ–¥—ñ—Ç—å —ñ–º‚Äô—è —Ç–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∞:")
            user_choices[user_id] = 'awaiting_custom_input'
        else:
            index = int(query.data.split("_")[1])
            name, url = PSYCHOLOGISTS[index]
            await notify_admin(context, name, url, user_id) # –ó–º—ñ–Ω–µ–Ω–æ –Ω–∞–∑–≤—É —Ñ—É–Ω–∫—Ü—ñ—ó –Ω–∞ notify_admin
            await query.message.reply_text("–î—è–∫—É—é! –û—á—ñ–∫—É–π—Ç–µ –Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é :)")

# –ü–µ—Ä–µ–π–º–µ–Ω–æ–≤–∞–Ω–æ –¥–ª—è —è—Å–Ω–æ—Å—Ç—ñ, —â–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤—ñ–¥–æ–º–ª—è—î –∞–¥–º—ñ–Ω–∞
async def notify_admin(context: CallbackContext, name: str, url: str, user_id: int):
    # YOUR_USERNAME –º–∞—î –±—É—Ç–∏ ID —á–∞—Ç—É –∞–±–æ —ñ–º'—è–º –≥—Ä—É–ø–∏/–∫–∞–Ω–∞–ª—É, –∫—É–¥–∏ –≤—ñ–¥—Å–∏–ª–∞—î—Ç—å—Å—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.
    # –Ø–∫—â–æ —Ü–µ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —Ç–æ –≤—ñ–Ω –º–∞—î –Ω–∞–ø–∏—Å–∞—Ç–∏ –±–æ—Ç—É –ø–µ—Ä—à–∏–º, —ñ –±–æ—Ç –ø–æ–≤–∏–Ω–µ–Ω –∑–Ω–∞—Ç–∏ –π–æ–≥–æ chat_id.
    # –ö—Ä–∞—â–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ chat_id –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞, —è–∫—â–æ –≤—ñ–Ω –≤—ñ–¥–æ–º–∏–π.
    # –Ø–∫—â–æ YOUR_USERNAME - —Ü–µ chat_id –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ê–Ω–¥—Ä—ñ—è, —Ç–æ –≤—Å–µ –¥–æ–±—Ä–µ.
    # –Ø–∫—â–æ —Ü–µ username, —Ç–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –π–æ–≥–æ chat_id.
    # –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –≤–∏ –º–æ–∂–µ—Ç–µ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –æ–∫—Ä–µ–º—É –∫–æ–º–∞–Ω–¥—É –¥–ª—è –∞–¥–º—ñ–Ω–∞, —â–æ–± –≤—ñ–Ω –ø–æ–≤—ñ–¥–æ–º–∏–≤ –±–æ—Ç—É —Å–≤—ñ–π ID.
    message = f"üë§ –î—ñ–≤—á–∏–Ω–∞ (ID: {user_id}) –≤–∏–±—Ä–∞–ª–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∞:\n–Ü–º'—è: {name}\n–ü–æ—Å–∏–ª–∞–Ω–Ω—è: {url}"
    try:
        # –í–∞–∂–ª–∏–≤–æ: –Ø–∫—â–æ YOUR_USERNAME - —Ü–µ –ø—Ä–æ—Å—Ç–æ —ñ–º'—è, –∞ –Ω–µ chat_id, —Ü–µ –º–æ–∂–µ –Ω–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏.
        # –ö—Ä–∞—â–µ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ chat_id –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
        await context.bot.send_message(chat_id=f"@{YOUR_USERNAME}", text=message)
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É {YOUR_USERNAME}: {e}")
        # –ú–æ–∂–Ω–∞ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –ø—Ä–æ –ø–æ–º–∏–ª–∫—É, –∞–±–æ –ª–æ–≥—É–≤–∞—Ç–∏ —ó—ó.
    user_choices[user_id] = None # –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—ñ—Å–ª—è –æ–±—Ä–æ–±–∫–∏

async def handle_message(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    if user_choices.get(user_id) == 'awaiting_custom_input':
        # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å —ñ–º'—è —Ç–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ –æ–¥–Ω–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ,
        # –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ä–æ–∑–ø–∞—Ä—Å–∏—Ç–∏ update.message.text.
        # –ù–∞—Ä–∞–∑—ñ, –≤–∞—à –∫–æ–¥ –ø—Ä–∏–π–º–∞—î –≤—Å–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —è–∫ —ñ–º'—è, –∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Å—Ç–∞–≤–∏—Ç—å—Å—è —è–∫ "-".
        # –ú–æ–∂–ª–∏–≤–æ, –∫—Ä–∞—â–µ –∑–∞–ø—Ä–æ—Å–∏—Ç–∏ –æ–∫—Ä–µ–º–æ —ñ–º'—è, –ø–æ—Ç—ñ–º –ø–æ—Å–∏–ª–∞–Ω–Ω—è.
        custom_input = update.message.text.strip()
        # –ü—Ä–æ—Å—Ç–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç: –ø—Ä–∏–ø—É—Å—Ç–∏–º–æ, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å "–Ü–º'—è –ü—Å–∏—Ö–æ–ª–æ–≥–∞, –ü–æ—Å–∏–ª–∞–Ω–Ω—è"
        if ',' in custom_input:
            name, url = custom_input.split(',', 1) # –†–æ–∑–¥—ñ–ª–∏—Ç–∏ –ª–∏—à–µ –∑–∞ –ø–µ—Ä—à–æ—é –∫–æ–º–æ—é
            name = name.strip()
            url = url.strip()
        else: # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–æ—Å—Ç–æ –≤–≤—ñ–≤ —ñ–º'—è –±–µ–∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
            name = custom_input
            url = "–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–µ –Ω–∞–¥–∞–Ω–æ" # –ê–±–æ –ø–æ–ø—Ä–æ—Å—ñ—Ç—å –≤–≤–µ—Å—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –æ–∫—Ä–µ–º–æ

        await notify_admin(context, name, url, user_id) # –ó–º—ñ–Ω–µ–Ω–æ –Ω–∞–∑–≤—É —Ñ—É–Ω–∫—Ü—ñ—ó
        await update.message.reply_text("–î—è–∫—É—é! –û—á—ñ–∫—É–π—Ç–µ –Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é :)")
        # –ü—ñ—Å–ª—è –æ–±—Ä–æ–±–∫–∏ –≤–≤–æ–¥—É, —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω
        user_choices[user_id] = None

def main():
    TOKEN = "7588127606:AAGscvK5SeIdZ3Qsx_oNzR4cK0A6njFD9mM"
    # –î–ª—è –Ω–æ–≤–∏—Ö –≤–µ—Ä—Å—ñ–π python-telegram-bot –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è ApplicationBuilder
    app = ApplicationBuilder().token(TOKEN).build()

    # –î–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è —Å—Ö–æ–∂–∏–º
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(handle_choice))
    # MessageHandler –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å, —è–∫—ñ –Ω–µ —î –∫–æ–º–∞–Ω–¥–∞–º–∏
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞. run_polling() —Ç–µ–ø–µ—Ä –º–µ—Ç–æ–¥ –æ–±'—î–∫—Ç–∞ Application
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ. –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω—å...")
    app.run_polling()

if __name__ == '__main__':
    main()
